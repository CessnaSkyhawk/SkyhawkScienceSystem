//Convert-o-trons
@PART:HAS[#RRConverter[isSet]]:FOR[zzz_SkyhawkScienceSystem] 
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]]:NEEDS[RationalResourcesCompanion] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Monoprop]]:NEEDS[RationalResourcesCompanion] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoProp]]:NEEDS[RationalResourcesCompanion] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]]:NEEDS[RationalResourcesCompanion] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]]:NEEDS[RationalResourcesCompanion] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LH2]]:NEEDS[RationalResourcesCompanion] {}	
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LH2+Ox]]:NEEDS[RationalResourcesCompanion] {}	
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LCH4]]:NEEDS[RationalResourcesCompanion] {}	
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LCH4+Ox]]:NEEDS[RationalResourcesCompanion] {}	
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lithium]]:NEEDS[RationalResourcesCompanion] {}		
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?LFO]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Kerolox 
		@StartActionName = Start ISRU [Kerolox]
		@StopActionName = Stop ISRU [Kerolox]
		@ToggleActionName = Toggle ISRU [Kerolox]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?LiquidFuel]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Kerosene 
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?MonoProp?A]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Hydrazine A 
		@StartActionName = Start ISRU [Hydrazine A ]
		@StopActionName = Stop ISRU [Hydrazine A ]
		@ToggleActionName = Toggle ISRU [Hydrazine A ]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?MonoProp?B]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Hydrazine B 
		@StartActionName = Start ISRU [Hydrazine B]
		@StopActionName = Stop ISRU [Hydrazine B ]
		@ToggleActionName = Toggle ISRU [Hydrazine B]
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Kerolox]]
	{
		@ConverterName = Basic // using moles
		@StartActionName = Start ISRU [Basic]
		@StopActionName = Stop ISRU [Basic]
		@ToggleActionName = Toggle ISRU [Basic]
		Tag = RR
		!resourceOutputName = nope
		!INPUT_RESOURCE:HAS[~ResourceName[ElectricCharge]],* {}
		!OUTPUT_RESOURCE,* {}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = Aerozine50 // using kilos
		@StartActionName = Start ISRU [Aerozine50]
		@StopActionName = Stop ISRU [Aerozine50]
		@ToggleActionName = Toggle ISRU [Aerozine50]
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.3
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.7
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.2
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aerozine50
			Ratio = 0.938415
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = Nitrogen Tetroxide // using kilos
		@StartActionName = Start ISRU [NTO]
		@StopActionName = Stop ISRU [NTO]
		@ToggleActionName = Toggle ISRU [NTO]
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 1.5792
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.07209
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NitrogenTetroxide
			Ratio = 1.146951663
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Hypergolics // using kilos
		@StartActionName = Start ISRU [Hypergolics]
		@StopActionName = Stop ISRU [Hypergolics]
		@ToggleActionName = Toggle ISRU [Hypergolics]
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.472069237
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen	
			Ratio = 1.101494886
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 1.399842644
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.0567
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aerozine50
			Ratio = 0.938415
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		OUTPUT_RESOURCE
		{
			ResourceName = NitrogenTetroxide
			Ratio = 1.146951663
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]] {}
}

@PART:HAS[#RRFuelCell[isSet]]:NEEDS[CommunityResourcePack]:FOR[zRationalResources]
{
	rrInAerozine50 = 0.02475
	rrInNitrogenTetroxide = 0.02025 
	rrInHydrazine = 0.006

	@rrInAerozine50 *= 5
	@rrInNitrogenTetroxide *= 5

	@rrInAerozine50 *= #$RRPower$
	@rrInNitrogenTetroxide *= #$RRPower$
	@rrInHydrazine *= #$RRPower$	
}


//Fuel Cells
@PART:HAS[#RRFuelCell[isSet]]:NEEDS[CommunityResourcePack]:FOR[zRationalResources]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RRFuelCell]]
	{
		@SUBTYPE:HAS[#ConverterName[LFO]]
		{
			@descriptionSummary = Kerosene + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLiquidFuel$ LF/s + $/rrInOxidizer$ LOX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
		}
		@SUBTYPE:HAS[#ConverterName[Hydrolox]]
		{
			@descriptionSummary = LqdHydrogen + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdHydrogen$ LH2/s + $/rrInOxidizer$ LOX/s <br><b>Outputs = </b> $/rrOutputEC$ + $/rrOutputWater$ H2O/s.<br><color="orange">Please quicksave + quickload after applying.</color>
		}
		@SUBTYPE:HAS[#ConverterName[Methalox]]
		{
			@descriptionSummary = LqdMethane + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdMethane$ LCH4/s + $/rrInOxidizer$ LOX/s. <br><b>Outputs = </b> 18 EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
		}
		@SUBTYPE:HAS[#ConverterName[CarbonM]]
		{
			@descriptionSummary = LqdCarbonMonoxide + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdCO$ LCO/s + $/rrInOxidizer$ LOX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
		}
		SUBTYPE,3
		{
			name = Hypergolic
			title = Hypergolic
			primaryColor = LightishRed
			secondaryColor = ResourceColorOxidizer
			descriptionSummary = Aerozine50 + Nitrogen Tetroxide
			descriptionDetail = #<b>Inputs = </b> $/rrInAerozine50$ Az50/s + $/rrInNitrogenTetroxide$ NTO/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Aerozine50
						Ratio = #$/rrInAerozine50$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = NitrogenTetroxide
						Ratio = #$/rrInNitrogenTetroxide$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		SUBTYPE,4
		{
			name = Hydrazine
			title = Hydrazine
			primaryColor = ResourceColorMonoPropellant
			secondaryColor = ResourceColorMonoPropellant
			descriptionSummary = Hydrazine
			descriptionDetail = #<b>Inputs = </b> $/rrInHydrazine$ N2H4/s <br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = MonoPropellant
						Ratio = #$/rrInHydrazine$
					}
				}
			}
		}
	}
}
