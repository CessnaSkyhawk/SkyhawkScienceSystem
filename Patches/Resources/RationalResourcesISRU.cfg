@PART:HAS[@MODULE[ModuleResourceConverter],#RRConverter[Set]]:FOR[zzz_SkyhawkScienceSystem] 
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]:NEEDS[RationalResourcesCompanion]
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoProp]:NEEDS[RationalResourcesCompanion]
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]:NEEDS[RationalResourcesCompanion]
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]:NEEDS[RationalResourcesCompanion]		
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?LFO]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Kerolox 
		@StartActionName = Start ISRU [Kerolox]
		@StopActionName = Stop ISRU [Kerolox]
		@ToggleActionName = Toggle ISRU [Kerolox]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?LiquidFuel]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Kerosene 
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?MonoProp?A]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Hydrazine A 
		@StartActionName = Start ISRU [Hydrazine A ]
		@StopActionName = Stop ISRU [Hydrazine A ]
		@ToggleActionName = Toggle ISRU [Hydrazine A ]
	}
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?MonoProp?B]]:NEEDS[RationalResourcesCompanion]
	{
		@ConverterName = Hydrazine B 
		@StartActionName = Start ISRU [Hydrazine B]
		@StopActionName = Stop ISRU [Hydrazine B ]
		@ToggleActionName = Toggle ISRU [Hydrazine B]
	}
		+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Basic // using moles
		@StartActionName = Start ISRU [Basic]
		@StopActionName = Stop ISRU [Basic]
		@ToggleActionName = Toggle ISRU [Basic]
		Tag = RR
		!resourceOutputName = nope
		!INPUT_RESOURCE:HAS[~ResourceName[ElectricCharge]],* {}
		!OUTPUT_RESOURCE,* {}
	}
	
	// Default Misc
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = Aerozine50 // using kilos
		@StartActionName = Start ISRU [Aerozine50]
		@StopActionName = Stop ISRU [Aerozine50]
		@ToggleActionName = Toggle ISRU [Aerozine50]
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.3
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.7
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.2
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aerozine50
			Ratio = 0.938415
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = Nitrogen Tetroxide // using kilos
		@StartActionName = Start ISRU [NTO]
		@StopActionName = Stop ISRU [NTO]
		@ToggleActionName = Toggle ISRU [NTO]
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 1.5792
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.07209
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NitrogenTetroxide
			Ratio = 1.146951663
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Hypergolics // using kilos
		@StartActionName = Start ISRU [Hypergolics]
		@StopActionName = Stop ISRU [Hypergolics]
		@ToggleActionName = Toggle ISRU [Hypergolics]
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.472069237
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen	
			Ratio = 1.101494886
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 1.399842644
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.0567
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aerozine50
			Ratio = 0.938415
			FlowMode = STAGE_PRIORITY_FLOW
		}		
		OUTPUT_RESOURCE
		{
			ResourceName = NitrogenTetroxide
			Ratio = 1.146951663
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}